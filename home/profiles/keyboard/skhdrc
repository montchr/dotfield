# skhd configuration
#
# === SOURCES ===
#
# - https://gist.github.com/pkazmier/213d9dce6b1ea313eaf0a17b017c2b08
# - https://github.com/alyssais
#
# === GOALS ===
#
# - Minimize usage of global keybinding namespace by favoring modal bindings.
# - Vi-like direction navigation: h/l = west/east; j/k = south/north.
# - The less common an operation in each mode, the more modifier keys.
# - Shift+<key> often indicates a reversal of the unmodified action.
# - FOCUS mode is the gate to the other modes, triggered by hyper-space.
#


:: default
# TODO: indicate APP LAUNCHER mode with color or some other way
:: app    @                                                          # Launch apps
# TODO: indicate SYSTEM mode with color or some other way
:: sys    @                                                          # System control mode
:: focus  @ # Focus window, desktop, monitors
:: grid   @ # Floating window layout
:: swap   @ # Swap windows
:: warp   @ # Warp and send to desktop/monitors
:: warpnf @ # Same, but don't follow focus
:: resize @ # Resize window operations
:: stack  @ # Stack windows



# - - - - - - - - - - - - - - - - - - - -
# DEFAULT mode
# - - - - - - - - - - - - - - - - - - - -

# APP LAUNCHER mode
default < hyper - a     ; app
# SYSTEM mode
default < hyper - q     ; sys
# YABAI / HYPER-SPACE mode
default < hyper - space ; focus

# Open emacs everywhere
default < hyper - e     : doom everywhere
# Open ephemeral org-capture frame
default < hyper - x     : org-capture

# [RESERVED]: espanso snippet search
# default < hyper - s     : : ; # see espanso config/default.yml

# Close the currently-focused window.
default < meh - d       : yabai-close-window


# - - - - - - - - - - - - - - - - - - - -
# APP LAUNCHER mode
# - - - - - - - - - - - - - - - - - - - -

app     < hyper - a ; default
app     < escape    ; default

## _e_macs
#           -- open a new instance of emacs in background
#              TODO: tell yabai about this window specifically
#              FIXME: use default profile, whichever that is based on config
app     < e : emacs --with-profile doom &; \
              skhd -k 'escape'
#           -- open a new frame for the existing emacs instance
app     < shift - e : emacsclient -cn; \
              skhd -k 'escape'

## _f_irefox
#             -- new window in home profile
app     < f : open -n -a "/Applications/Firefox Developer Edition.app/Contents/MacOS/firefox" \
              --args -P home ; \
              skhd -k 'escape'
#             -- new window in work profile
app     < shift - f : open -n -a "/Applications/Firefox Developer Edition.app/Contents/MacOS/firefox" \
              --args -P work ; \
              skhd -k 'escape'

## _t_erminal
#             -- new os window
app     < t : kitty @ --to unix:/tmp/kitty-socket \
                      new-window --window-type os ; \
              skhd -k 'escape'


# ========================================
# SYSTEM mode
# ========================================

sys     < hyper - q ; default
sys     < escape    ; default

# Toggle dark mode.
sys     < d : toggle-dark-mode ; \
              skhd -k 'escape'

# Reload Espanso configs.
sys     < p : espanso restart ; \
              skhd -k 'escape'

# Reload skhd config
# FIXME: this might not work...
sys     < s : skhd -r ; \
              skhd -k 'escape'

# Restart yabai
sys     < y : launchctl kickstart -k "gui/$UID/org.nixos.yabai" ; \
              skhd -k 'escape'


# ========================================
# HYPER-SPACE / YABAI modes
# ========================================

# Entry to HYPER-SPACE modals is always to FOCUS mode. Getting out of any mode
# can also be done with ESCAPE.
focus, grid, swap, warp, warpnf, resize, stack < hyper - space     ; default
focus, grid, swap, warp, warpnf, resize, stack < ctrl - g          ; default
grid, swap, warp, warpnf, resize, stack < escape                   ; focus
focus < escape                                                     ; default

# Once in FOCUS mode (or any other mode other than default), you can switch
# modes with single keystroke. (mnemonic: letter corresponds to first letter of
# mode name, with exception of warpnf, which is a variant invoked with shift)

# Disable FOCUS mode switching since it's easy to get back to and so we
# can free up a keybinding.
# focus, grid, swap, warp, warpnf, resize < f                 ; focus

# focus, grid, swap, warp, warpnf, resize < g                 ; grid
focus < g                 ; grid
focus, grid, swap, warp, warpnf, resize < r                 ; resize
focus, grid, swap, warp, warpnf, resize < s                 ; swap
focus, grid, swap, warp, warpnf, resize < shift - w         ; warpnf
focus, grid, swap, warp, warpnf, resize < t                 ; stack
focus, grid, swap, warp, warpnf, resize < w                 ; warp

# The following keybindings are available in all modes.
focus, grid, swap, warp, warpnf, resize < b                 : yabai -m space --balance
focus, grid, swap, warp, warpnf, resize < f                 : yabai -m window --toggle float           # mnemonic: _f_loat
focus, grid, swap, warp, warpnf, resize < i                 : yabai -m window --toggle split
focus, grid, swap, warp, warpnf, resize < m                 : yabai -m window --toggle zoom-fullscreen # mnemonic: monocle
focus, grid, swap, warp, warpnf, resize < p                 : yabai -m window --toggle zoom-parent     # mnemonic: _p_arent
focus, grid, swap, warp, warpnf, resize < q                 : yabai-close-window                  # mnemonic: _q_uit
focus, grid, swap, warp, warpnf, resize < shift - space     : yabai -m space --rotate 270
focus, grid, swap, warp, warpnf, resize < space             : yabai -m space --rotate 90
focus, grid, swap, warp, warpnf, resize < x                 : yabai -m space --mirror x-axis           # horizontal
focus, grid, swap, warp, warpnf, resize < y                 : yabai -m space --mirror y-axis           # vertical


#
# YABAI :: FOCUS mode
# ========================================
# Change focus using standard vi directional keys. Enter changes focus to the
# biggest window. You'll see this theme repeated over and over again.
#
# FOCUS mode does a lot of heavy lifting, inferring some "do what I mean" behavior.
#
#
# If a window doesn't exist in the specified direction, then fall back to
# focusing the next available display in that direction. If there's no available
# display, then, as a last resort, try paging through a window stack.
#

focus           < k : yabai-focus-direction north
focus           < j : yabai-focus-direction south
focus           < h : yabai-focus-direction west
focus           < l : yabai-focus-direction east

default         < meh - k : yabai-focus-direction north --displays
default         < meh - j : yabai-focus-direction south --displays
default         < meh - h : yabai-focus-direction west --displays
default         < meh - l : yabai-focus-direction east --displays
default         < hyper - k : yabai-focus-direction north
default         < hyper - j : yabai-focus-direction south
default         < hyper - h : yabai-focus-direction west
default         < hyper - l : yabai-focus-direction east

# Change the window focused in the current stack, cycling around to the beginning/end.
focus           < shift - n : yabai -m window --focus stack.prev || yabai -m window --focus stack.last
focus           < n         : yabai -m window --focus stack.next || yabai -m window --focus stack.first

focus           < return    : yabai -m window --focus biggest

# Change the space focus using numbers corresponding to space or cycle
# through the spaces using tab and shift - tab combination. You'll see this
# pattern repeated when we get WARP mode as well. The non-modified keys will
# warp to a space, and prefixing with ctrl will warp to a monitor. Again, the
# goal was to aim for consistency.
focus           < 1           : yabai -m space --focus 1
focus           < 2           : yabai -m space --focus 2
focus           < 3           : yabai -m space --focus 3
focus           < tab         : yabai -m space --focus next
focus           < shift - tab : yabai -m space --focus prev
focus           < shift - h   : yabai -m space --focus prev
focus           < shift - l   : yabai -m space --focus next

# Prefix the above with ctrl to change the monitor focus using numbers
# corresponding to monitor or cycle through the monitors using tab and shift -
# tab combination.
focus           < ctrl - 1           : yabai -m display --focus 1
focus           < ctrl - 2           : yabai -m display --focus 2
focus           < ctrl - 3           : yabai -m display --focus 3
focus           < ctrl - tab         : yabai -m display --focus next
focus           < ctrl + shift - tab : yabai -m display --focus prev
focus           < ctrl - h           : yabai -m display --focus west
focus           < ctrl - l           : yabai -m display --focus east

# Change the layout mode of a desktop to one of the three supported modes.
focus           < shift - b : yabai -m space --layout bsp     # mnemonic: _b_sp
focus           < shift - s : yabai -m space --layout stack   # mnemonic: _s_tack
focus           < shift - f : yabai -m space --layout float   # mnemonic: _f_loat


#
# YABAI :: GRID mode
# ========================================
# Grid mode bindings are to resize and place floating windows on your desktop
# in well known positions.
#

# The standard non-modified keys are used to resize the window to the top-half,
# bottom-half, right-half, left-half, and center of screen respectively.
grid            < k                 : yabai -m window --grid 2:1:0:0:1:1
grid            < j                 : yabai -m window --grid 2:1:0:1:1:1
grid            < l                 : yabai -m window --grid 1:2:1:0:1:1
grid            < h                 : yabai -m window --grid 1:2:0:0:1:1
grid            < return            : yabai -m window --grid 6:6:1:1:4:4

# Prefix the above with shift modifier to resize a bit smaller: top-third,
# bottom-third, left-third, right-third, and smaller center.
grid            < shift - k         : yabai -m window --grid 3:1:0:0:1:1
grid            < shift - j         : yabai -m window --grid 3:1:0:2:1:1
grid            < shift - l         : yabai -m window --grid 1:3:2:0:1:1
grid            < shift - h         : yabai -m window --grid 1:3:0:0:1:1
grid            < shift - return    : yabai -m window --grid 4:4:1:1:2:2

# Prefix with ctrl to resize even smaller and place in corners or center.
grid            < ctrl - k           : yabai -m window --grid 5:5:4:4:1:1
grid            < ctrl - j           : yabai -m window --grid 5:5:0:4:1:1
grid            < ctrl - l           : yabai -m window --grid 5:5:4:0:1:1
grid            < ctrl - h           : yabai -m window --grid 5:5:0:0:1:1
grid            < ctrl - return      : yabai -m window --grid 6:6:2:2:2:2

#
# YABAI :: SWAP mode
# ========================================
#

# Swap windows using standard vi directional keys.
swap            < k                 : yabai -m window --swap north
swap            < j                 : yabai -m window --swap south
swap            < l                 : yabai -m window --swap east
swap            < h                 : yabai -m window --swap west
swap            < return            : yabai -m window --swap biggest


#
# YABAI :: WARP mode
# ========================================
#

# Warp windows using standard vi directional keys. These bindings are the same
# whether you are in WARP or WARPNF mode.
warp, warpnf    < k                 : yabai -m window --warp north
warp, warpnf    < j                 : yabai -m window --warp south
warp, warpnf    < return            : yabai -m window --warp biggest

# WARP and WARPNF modes handle east/west differenttly
# @TODO: Handle fallback to display and then space -- but 'following' relies on a sequence
# @TODO: Query for additional window in the specified direction before attempting to warp to the next space
# warp      < l : yabai -m window --warp east || yabai -m window --space next; yabai -m space --focus next
# warp      < h : yabai -m window --warp west || yabai -m window --space prev; yabai -m space --focus prev
warp, warpnf    < l : yabai -m window --warp east
warp, warpnf    < h : yabai -m window --warp west

# Warp window to monitor and follow.
warp            < ctrl - 1           : yabai -m window --display 1; yabai -m display --focus 1
warp            < ctrl - 2           : yabai -m window --display 2; yabai -m display --focus 2
warp            < ctrl - 3           : yabai -m window --display 3; yabai -m display --focus 3
warp            < ctrl - tab         : yabai -m window --display next; yabai -m display --focus next
warp            < ctrl + shift - tab : yabai -m window --display prev; yabai -m display --focus prev
warp            < ctrl - l           : yabai -m window --display next; yabai -m display --focus next
warp            < ctrl - h           : yabai -m window --display prev; yabai -m display --focus prev

# Warp window to space and follow.
warp            < 1                : yabai -m window --space 1; yabai -m space --focus 1
warp            < 2                : yabai -m window --space 2; yabai -m space --focus 2
warp            < 3                : yabai -m window --space 3; yabai -m space --focus 3
warp            < tab              : yabai -m window --space next; yabai -m space --focus next
warp            < shift - tab      : yabai -m window --space prev; yabai -m space --focus prev
warp            < shift - l        : yabai -m window --space next; yabai -m space --focus next
warp            < shift - h        : yabai -m window --space prev; yabai -m space --focus prev

# Warp window to space, but do NOT follow.
warpnf          < 1                 : yabai -m window --space 1
warpnf          < 2                 : yabai -m window --space 2
warpnf          < 3                 : yabai -m window --space 3
warpnf          < tab               : yabai -m window --space next
warpnf          < shift - tab       : yabai -m window --space prev

# Prefix with ctrl to warp window to monitor, but do NOT follow.
warpnf          < ctrl - 1           : yabai -m window --display 1
warpnf          < ctrl - 2           : yabai -m window --display 2
warpnf          < ctrl - 3           : yabai -m window --display 3
warpnf          < ctrl - tab         : yabai -m window --display next
warpnf          < ctrl + shift - tab : yabai -m window --display prev


#
# YABAI :: RESIZE mode
# ========================================
#

# Increase size of window using standard vi directional keys.
resize          < k                 : yabai -m window --resize top:0:-48
resize          < j                 : yabai -m window --resize bottom:0:48
resize          < l                 : yabai -m window --resize right:48:0
resize          < h                 : yabai -m window --resize left:-48:0

# Prefix the above with shift to decrease size of window using standard vi
# directional keys.
resize          < shift - k         : yabai -m window --resize top:0:48
resize          < shift - j         : yabai -m window --resize bottom:0:-48
resize          < shift - l         : yabai -m window --resize right:-48:0
resize          < shift - h         : yabai -m window --resize left:48:0

# Golden-ish ratio sizing
resize          < g                 : yabai -m window --ratio abs:0.381966011
resize          < shift - g         : yabai -m window --ratio abs:0.6180339887

# STACK mode -- for moving windows amongst stacks.
stack    < k                 : yabai -m window --stack north
stack    < j                 : yabai -m window --stack south
stack    < l                 : yabai -m window --stack east
stack    < h                 : yabai -m window --stack west
stack    < return            : yabai -m window --stack biggest
# @TODO: command doesn't seem to work, even when running in shell. maybe because `i` is already bound?
# stack    < i                 : hs -c 'stackline.config:toggle("appearance.showIcons")'
