#!/usr/bin/env bash
# SPDX-FileCopyrightText: Ulf Stegemann <ulf@zeitform.de>
# SPDX-FileCopyrightText: 2020 Paulo Tom√© <paulo.jorge.tome@gmail.com>
# SPDX-FileCopyrightText: 2022 Chris Montgomery <chris@cdom.io>
# SPDX-License-Identifier: GPL-3.0-or-later
#
# ediff-tool
#
# Wrapper for ediff for use as a git mergetool or difftool.
#
# https://github.com/paulotome/emacstool/blob/b3833e1a4eda767cf0ed28e12b1311ccf0f41cfe/ediff.sh
#

if [[ ! -f "${DOTFIELD_DIR}/lib/utils.sh" ]]; then
  echo "Dotfield utils not found! Aborting." >&2
  exit 1
fi

# shellcheck source=../../../lib/utils.sh
. "${DOTFIELD_DIR}/lib/utils.sh"

if [ ! ${#} -ge 2 ]
then

msg::stream::errors <<END
Usage: ${0} <local> <remote> [<merged>] [<base>]
       (Parameters can be provided by \`git mergetool'.)
END
exit 1

fi

LOCAL="$1"
REMOTE="$2"
MERGED="${3:-${REMOTE}}"
BASE
EVAL
MERGEDSAVE

[[ ${4} ]] && [[ -r ${4} ]] && BASE=${4}

EVAL="ediff-merge-files \"${LOCAL}\" \"${REMOTE}\" nil \"${MERGED}\""
if [[ "${BASE}" ]] ; then
  EVAL="ediff-merge-files-with-ancestor \"${LOCAL}\" \"${REMOTE}\" \"${BASE}\" nil \"${MERGED}\""
elif [[ "${REMOTE}" == "${MERGED}" ]]; then
  EVAL="ediff \"${LOCAL}\" \"${REMOTE}\""
fi

# Run emacsclient.
emacsclient -a "" -e "(${EVAL})" 2>&1

# Check modified file for merge conflict markers.
[[ ! "$(grep -Ec '^(<<<<<<<|=======|>>>>>>>|####### Ancestor)' "${MERGED}")" = 0 ]] && {
  MERGEDSAVE=$(mktemp --tmpdir "$(basename ${MERGED}).merged")
  cp "${MERGED}" "${MERGEDSAVE}"
  msg::error "Conflict markers detected in ${MERGED}!"
  msg::error "Saved your changes to ${MERGEDSAVE}"
  exit 1
}

exit 0
