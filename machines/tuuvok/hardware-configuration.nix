# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "usb_storage" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3cdff7d2-227c-497d-8385-778ec45fd5bf";
    fsType = "btrfs";
    options = [
      "subvol=@root"
      "compress=zstd"
    ];
  };

  boot.initrd.luks.devices."enc".device = "/dev/disk/by-uuid/27bf4552-7294-432f-9e50-f651504fb7a9";

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/3cdff7d2-227c-497d-8385-778ec45fd5bf";
    fsType = "btrfs";
    options = [
      "subvol=@store"
      "noatime"
      "compress=zstd"
    ];
  };

  fileSystems."/var/log" = {
    device = "/dev/disk/by-uuid/3cdff7d2-227c-497d-8385-778ec45fd5bf";
    fsType = "btrfs";
    options = [
      "subvol=@log"
      "noatime"
      "compress=zstd"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/3cdff7d2-227c-497d-8385-778ec45fd5bf";
    fsType = "btrfs";
    options = [
      "subvol=@home"
      "compress=zstd"
    ];
  };

  fileSystems."/persist" = {
    device = "/dev/disk/by-uuid/3cdff7d2-227c-497d-8385-778ec45fd5bf";
    fsType = "btrfs";
    options = [
      "subvol=@persist"
      "compress=zstd"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/8116-1BF8";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [
    {
      # FIXME: systemd-boot timer times out
      device = "/dev/disk/by-uuid/ad93d511-b708-4129-baa1-cf5f589ff2b7";
    }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
