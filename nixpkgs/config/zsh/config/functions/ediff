# -*- mode: sh -*-
#
# Wrapper for ediff for use as a git mergetool or difftool.
#
# Credit goes to https://raw.githubusercontent.com/paulotome/emacstool/master/ediff.sh
#

if [ ! ${#} -ge 2 ]; then
    echo 1>&2 "Usage: ${0} LOCAL REMOTE [MERGED BASE]"
    echo 1>&2 "       (LOCAL, REMOTE, MERGED, BASE can be provided by \`git mergetool'.)"
    exit 1
fi

local LOCAL=${1}
local REMOTE=${2}
local MERGED=${${3}:-${REMOTE}}
local BASE
local EVAL
local MERGEDSAVE

[[ ${4} ]] && [[ -r ${4} ]] && BASE=${4}

if [[ $BASE ]] ; then
    EVAL="ediff-merge-files-with-ancestor \"${LOCAL}\" \"${REMOTE}\" \"${BASE}\" nil \"${MERGED}\""
elif [[ ${REMOTE} == ${MERGED} ]]; then
    EVAL="ediff \"${LOCAL}\" \"${REMOTE}\""
else
    EVAL="ediff-merge-files \"${LOCAL}\" \"${REMOTE}\" nil \"${MERGED}\""
fi

# Run emacsclient.
e -a "" -e "(${EVAL})" 2>&1

# Check modified file.
[[ ! "$(grep -Ec '^(<<<<<<<|=======|>>>>>>>|####### Ancestor)' "${MERGED}")" = 0 ]] && () {
  local MERGEDSAVE=$(mktemp --tmpdir "$(basename ${MERGED}).merged")
  cp ${MERGED} ${MERGEDSAVE}
  echo 1>&2 "Conflict markers detected in ${MERGED}!"
  echo 1>&2 "Saved your changes to ${MERGEDSAVE}"
  echo 1>&2 "Exiting with code 1."
} && exit 1

exit 0
